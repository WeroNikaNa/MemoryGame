{"ast":null,"code":"var _jsxFileName = \"/Users/weronika/Desktop/magic-memory/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport Cards from \"./components/Cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImg = [{\n  \"src\": \"/img/1.jpg\"\n}, {\n  \"src\": \"/img/2.jpg\"\n}, {\n  \"src\": \"/img/3.jpg\"\n}, {\n  \"src\": \"/img/4.jpg\"\n}, {\n  \"src\": \"/img/5.jpg\"\n}, {\n  \"src\": \"/img/6.jpg\"\n}];\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [choice1, setChoice1] = useState(null);\n  const [choice2, setChoice2] = useState(null); //shuffle cards\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImg, ...cardImg].sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  }; //handle a choice\n\n\n  const handleChoice = card => {\n    choice1 ? setChoice2(card) : setChoice1(card); // console.log(card)\n  }; //reset & add turn\n\n\n  const oneMove = card => {\n    setChoice1(null);\n    setChoice2(null);\n    setTurns(prevTurns => prevTurns + 1);\n  }; //compare 2 cards\n\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Find Pairs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), cards && /*#__PURE__*/_jsxDEV(Cards, {\n      cards: cards,\n      handleChoice: handleChoice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5jLq9Q5n1cpK+TFAhpE6KeKskwY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/weronika/Desktop/magic-memory/src/App.js"],"names":["React","useState","Cards","cardImg","App","cards","setCards","turns","setTurns","level","setLevel","choice1","setChoice1","choice2","setChoice2","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","oneMove","prevTurns","useEffect"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,OAAO,GAAE,CACX;AAAC,SAAM;AAAP,CADW,EAEX;AAAC,SAAM;AAAP,CAFW,EAGX;AAAC,SAAM;AAAP,CAHW,EAIX;AAAC,SAAM;AAAP,CAJW,EAKX;AAAC,SAAM;AAAP,CALW,EAMX;AAAC,SAAM;AAAP,CANW,CAAf;;AAQA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC,CALW,CAMX;;AACA,QAAMc,YAAY,GAAG,MAAK;AACtB,UAAMC,aAAa,GAAG,CAAC,GAAGb,OAAJ,EAAY,GAAGA,OAAf,EACjBc,IADiB,CACZ,MAAMC,IAAI,CAACC,MAAL,KAAc,GADR,EAEjBC,GAFiB,CAEZC,IAAD,KAAS,EAAC,GAAGA,IAAJ;AAAUC,MAAAA,EAAE,EAAEJ,IAAI,CAACC,MAAL;AAAd,KAAT,CAFa,CAAtB;AAGAb,IAAAA,QAAQ,CAACU,aAAD,CAAR;AACAR,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACH,GAND,CAPW,CAeX;;;AACA,QAAMe,YAAY,GAAIF,IAAD,IAAU;AAC3BV,IAAAA,OAAO,GAAGG,UAAU,CAACO,IAAD,CAAb,GAAsBT,UAAU,CAACS,IAAD,CAAvC,CAD2B,CAE3B;AACH,GAHD,CAhBW,CAqBX;;;AACA,QAAMG,OAAO,GAAIH,IAAD,IAAU;AACtBT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAN,IAAAA,QAAQ,CAACiB,SAAS,IAAEA,SAAS,GAAE,CAAvB,CAAR;AAEH,GALD,CAtBW,CA6BX;;;AACAC,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEP,EAFO,CAAT;AAKF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEX,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGKV,KAAK,iBAAI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAqB,MAAA,YAAY,EAAEkB;AAAnC;AAAA;AAAA;AAAA;AAAA,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA1CQnB,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import './App.css'\nimport React, { useState } from 'react';\nimport Cards from \"./components/Cards\";\n\nconst cardImg =[\n    {\"src\":\"/img/1.jpg\"},\n    {\"src\":\"/img/2.jpg\"},\n    {\"src\":\"/img/3.jpg\"},\n    {\"src\":\"/img/4.jpg\"},\n    {\"src\":\"/img/5.jpg\"},\n    {\"src\":\"/img/6.jpg\"},\n]\nfunction App() {\n    const [cards, setCards] = useState([])\n    const [turns, setTurns] = useState(0)\n    const [level, setLevel] = useState(1)\n    const [choice1, setChoice1] = useState(null)\n    const [choice2, setChoice2] = useState(null)\n    //shuffle cards\n    const shuffleCards = () =>{\n        const shuffledCards = [...cardImg,...cardImg]\n            .sort(() => Math.random()-0.5)\n            .map((card)=>({...card, id: Math.random()}) )\n        setCards(shuffledCards)\n        setTurns(0)\n    }\n\n    //handle a choice\n    const handleChoice = (card) => {\n        choice1 ? setChoice2(card) : setChoice1(card)\n        // console.log(card)\n    }\n\n    //reset & add turn\n    const oneMove = (card) => {\n        setChoice1(null)\n        setChoice2(null)\n        setTurns(prevTurns=>prevTurns +1)\n\n    }\n\n    //compare 2 cards\n    useEffect(()=>{\n\n    },[])\n\n\n  return (\n    <div className=\"App\">\n      <h1>Find Pairs</h1>\n      <button onClick={shuffleCards}>New Game</button>\n        {cards && <Cards cards={cards} handleChoice={handleChoice}/>}\n    </div>\n  );\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}